<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Oceny', 'doctrine');

/**
 * BaseOceny
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $pupil
 * @property integer $ocena_id
 * @property float $waga
 * @property integer $nauczyciel_id
 * @property integer $przedmiot_id
 * @property integer $semestr_id
 * @property date $dataoceny
 * @property string $info
 * @property Uzytkownik $Uzytkownik
 * @property Tablicaocen $Tablicaocen
 * @property Przedmiot $Przedmiot
 * @property Uzytkownik $Uzytkownik_4
 * @property Semestr $Semestr
 * 
 * @method integer     getId()            Returns the current record's "id" value
 * @method integer     getPupil()         Returns the current record's "pupil" value
 * @method integer     getOcenaId()       Returns the current record's "ocena_id" value
 * @method float       getWaga()          Returns the current record's "waga" value
 * @method integer     getNauczycielId()  Returns the current record's "nauczyciel_id" value
 * @method integer     getPrzedmiotId()   Returns the current record's "przedmiot_id" value
 * @method integer     getSemestrId()     Returns the current record's "semestr_id" value
 * @method date        getDataoceny()     Returns the current record's "dataoceny" value
 * @method string      getInfo()          Returns the current record's "info" value
 * @method Uzytkownik  getUzytkownik()    Returns the current record's "Uzytkownik" value
 * @method Tablicaocen getTablicaocen()   Returns the current record's "Tablicaocen" value
 * @method Przedmiot   getPrzedmiot()     Returns the current record's "Przedmiot" value
 * @method Uzytkownik  getUzytkownik4()   Returns the current record's "Uzytkownik_4" value
 * @method Semestr     getSemestr()       Returns the current record's "Semestr" value
 * @method Oceny       setId()            Sets the current record's "id" value
 * @method Oceny       setPupil()         Sets the current record's "pupil" value
 * @method Oceny       setOcenaId()       Sets the current record's "ocena_id" value
 * @method Oceny       setWaga()          Sets the current record's "waga" value
 * @method Oceny       setNauczycielId()  Sets the current record's "nauczyciel_id" value
 * @method Oceny       setPrzedmiotId()   Sets the current record's "przedmiot_id" value
 * @method Oceny       setSemestrId()     Sets the current record's "semestr_id" value
 * @method Oceny       setDataoceny()     Sets the current record's "dataoceny" value
 * @method Oceny       setInfo()          Sets the current record's "info" value
 * @method Oceny       setUzytkownik()    Sets the current record's "Uzytkownik" value
 * @method Oceny       setTablicaocen()   Sets the current record's "Tablicaocen" value
 * @method Oceny       setPrzedmiot()     Sets the current record's "Przedmiot" value
 * @method Oceny       setUzytkownik4()   Sets the current record's "Uzytkownik_4" value
 * @method Oceny       setSemestr()       Sets the current record's "Semestr" value
 * 
 * @package    edziennik
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOceny extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('oceny');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'oceny_id',
             'length' => 4,
             ));
        $this->hasColumn('pupil', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('ocena_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('waga', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '1',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('nauczyciel_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('przedmiot_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('semestr_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('dataoceny', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('info', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Uzytkownik', array(
             'local' => 'nauczyciel_id',
             'foreign' => 'id'));

        $this->hasOne('Tablicaocen', array(
             'local' => 'ocena_id',
             'foreign' => 'id'));

        $this->hasOne('Przedmiot', array(
             'local' => 'przedmiot_id',
             'foreign' => 'id'));

        $this->hasOne('Uzytkownik as Uzytkownik_4', array(
             'local' => 'pupil',
             'foreign' => 'id'));

        $this->hasOne('Semestr', array(
             'local' => 'semestr_id',
             'foreign' => 'id'));
    }
}