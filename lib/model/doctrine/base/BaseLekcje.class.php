<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Lekcje', 'doctrine');

/**
 * BaseLekcje
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $przedmiot_id
 * @property integer $klasa_id
 * @property integer $semestr_id
 * @property string $temat
 * @property timestamp $datalekcji
 * @property integer $nauczyciel_id
 * @property Klasy $Klasy
 * @property Przedmiot $Przedmiot
 * @property Semestr $Semestr
 * @property Uzytkownik $Uzytkownik
 * @property Doctrine_Collection $Uwagi
 * @property Doctrine_Collection $Obecnosci
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method integer             getPrzedmiotId()   Returns the current record's "przedmiot_id" value
 * @method integer             getKlasaId()       Returns the current record's "klasa_id" value
 * @method integer             getSemestrId()     Returns the current record's "semestr_id" value
 * @method string              getTemat()         Returns the current record's "temat" value
 * @method timestamp           getDatalekcji()    Returns the current record's "datalekcji" value
 * @method integer             getNauczycielId()  Returns the current record's "nauczyciel_id" value
 * @method Klasy               getKlasy()         Returns the current record's "Klasy" value
 * @method Przedmiot           getPrzedmiot()     Returns the current record's "Przedmiot" value
 * @method Semestr             getSemestr()       Returns the current record's "Semestr" value
 * @method Uzytkownik          getUzytkownik()    Returns the current record's "Uzytkownik" value
 * @method Doctrine_Collection getUwagi()         Returns the current record's "Uwagi" collection
 * @method Doctrine_Collection getObecnosci()     Returns the current record's "Obecnosci" collection
 * @method Lekcje              setId()            Sets the current record's "id" value
 * @method Lekcje              setPrzedmiotId()   Sets the current record's "przedmiot_id" value
 * @method Lekcje              setKlasaId()       Sets the current record's "klasa_id" value
 * @method Lekcje              setSemestrId()     Sets the current record's "semestr_id" value
 * @method Lekcje              setTemat()         Sets the current record's "temat" value
 * @method Lekcje              setDatalekcji()    Sets the current record's "datalekcji" value
 * @method Lekcje              setNauczycielId()  Sets the current record's "nauczyciel_id" value
 * @method Lekcje              setKlasy()         Sets the current record's "Klasy" value
 * @method Lekcje              setPrzedmiot()     Sets the current record's "Przedmiot" value
 * @method Lekcje              setSemestr()       Sets the current record's "Semestr" value
 * @method Lekcje              setUzytkownik()    Sets the current record's "Uzytkownik" value
 * @method Lekcje              setUwagi()         Sets the current record's "Uwagi" collection
 * @method Lekcje              setObecnosci()     Sets the current record's "Obecnosci" collection
 * 
 * @package    edziennik
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLekcje extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lekcje');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'lekcje_id',
             'length' => 4,
             ));
        $this->hasColumn('przedmiot_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('klasa_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('semestr_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('temat', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('datalekcji', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('nauczyciel_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Klasy', array(
             'local' => 'klasa_id',
             'foreign' => 'id'));

        $this->hasOne('Przedmiot', array(
             'local' => 'przedmiot_id',
             'foreign' => 'id'));

        $this->hasOne('Semestr', array(
             'local' => 'semestr_id',
             'foreign' => 'id'));

        $this->hasOne('Uzytkownik', array(
             'local' => 'nauczyciel_id',
             'foreign' => 'id'));

        $this->hasMany('Uwagi', array(
             'local' => 'id',
             'foreign' => 'lekcja_id'));

        $this->hasMany('Obecnosci', array(
             'local' => 'id',
             'foreign' => 'lekcja_id'));
    }
}